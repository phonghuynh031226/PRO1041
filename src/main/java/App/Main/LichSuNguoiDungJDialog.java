/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package App.Main;

import App.DAO.LichSuNguoiDungDAO;
import App.Entity.LichSuNguoiDung;
import App.Impl.LichSuNguoiDungDAOImpl;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author PHONG
 */
public class LichSuNguoiDungJDialog extends javax.swing.JDialog implements LichSuNguoiDungController{

    /**
     * Creates new form LichSuNguoiDungJDialog
     */
    public LichSuNguoiDungJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        afterInit();
    }

    // ====== DAO & STATE ======
    private final LichSuNguoiDungDAO dao = new LichSuNguoiDungDAOImpl();
    private DefaultTableModel model;
    private final SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm");
    private Integer filterUserId = null;         // nếu muốn mở dialog theo 1 user cụ thể


    // mở dialog và lọc sẵn theo user
    public LichSuNguoiDungJDialog(java.awt.Frame parent, boolean modal, Integer maNguoiDung) {
        super(parent, modal);
        this.filterUserId = maNguoiDung;
        initComponents();
        afterInit();
    }

    // ====== SAU KHI BUILD UI ======
    private void afterInit() {
        model = (DefaultTableModel) tblLichSuHD.getModel();
        model.setColumnIdentifiers(new Object[]{"Mã LS", "Mã người dùng", "Hành động", "Thời gian"});
        tblLichSuHD.setAutoCreateRowSorter(true);

        if (filterUserId != null) loadByUser(filterUserId);
        else loadTable();
    }

    // ====== CONTROLLER ======
    @Override
    public void loadTable() {
        model.setRowCount(0);
        List<LichSuNguoiDung> list = safeList(dao.findAll());
        for (LichSuNguoiDung ls : list) {
            model.addRow(new Object[]{
                // CHÚ Ý: Entity phải có getter tương ứng: getId(), getMaNguoiDung(), getHanhDong(), getThoiGian()
                // nếu bạn đặt tên khác (vd getMaLichSu), sửa lại dòng dưới cho khớp.
                ls.getId(),
                ls.getMaNguoiDung(),
                nz(ls.getHanhDong()),
                fmt(ls.getThoiGian())
            });
        }
    }

    @Override
    public void loadByUser(Integer userId) {
        model.setRowCount(0);
        List<LichSuNguoiDung> list = safeList(dao.findByMaNguoiDung(userId));
        for (LichSuNguoiDung ls : list) {
            model.addRow(new Object[]{
                ls.getId(),
                ls.getMaNguoiDung(),
                nz(ls.getHanhDong()),
                fmt(ls.getThoiGian())
            });
        }
    }

    // Lọc tạm trên client theo id ND / hành động / thời gian (text)
    @Override
    public void search(String keyword) {
        String kw = keyword == null ? "" : keyword.trim().toLowerCase();
        if (kw.isEmpty()) { if (filterUserId != null) loadByUser(filterUserId); else loadTable(); return; }

        model.setRowCount(0);
        List<LichSuNguoiDung> src = (filterUserId != null) ? safeList(dao.findByMaNguoiDung(filterUserId))
                                                            : safeList(dao.findAll());
        for (LichSuNguoiDung ls : src) {
            String gop = (ls.getMaNguoiDung() + " " + nz(ls.getHanhDong()) + " " + fmt(ls.getThoiGian())).toLowerCase();
            if (gop.contains(kw)) {
                model.addRow(new Object[]{ ls.getId(), ls.getMaNguoiDung(), nz(ls.getHanhDong()), fmt(ls.getThoiGian()) });
            }
        }
    }

    // ====== HELPERS ======
    private String fmt(Date d) { return d == null ? "" : sdf.format(d); }
    private String nz(String s) { return s == null ? "" : s; }
    private <T> List<T> safeList(List<T> in){ return in == null ? new ArrayList<>() : in; }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichSuHD = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(40, 46, 62));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 205, 31), 2));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 205, 31));
        jLabel1.setText("LỊCH SỬ HOẠT ĐỘNG");

        tblLichSuHD.setBackground(new java.awt.Color(207, 243, 243));
        tblLichSuHD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblLichSuHD.setForeground(new java.awt.Color(40, 46, 62));
        tblLichSuHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLichSuHD.setSelectionBackground(new java.awt.Color(46, 56, 86));
        tblLichSuHD.setSelectionForeground(new java.awt.Color(255, 205, 31));
        jScrollPane1.setViewportView(tblLichSuHD);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(420, 420, 420))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LichSuNguoiDungJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LichSuNguoiDungJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LichSuNguoiDungJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LichSuNguoiDungJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LichSuNguoiDungJDialog dialog = new LichSuNguoiDungJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLichSuHD;
    // End of variables declaration//GEN-END:variables
}
